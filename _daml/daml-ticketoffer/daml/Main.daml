-- {-# LANGUAGE ApplicativeDo #-}
module Main where

import DA.Assert ((===))
import Daml.Script

template TicketOffer
  with
      organizer : Party
      buyer : Party
      price : Decimal
  where
      signatory organizer
      observer buyer
      choice Accept : ContractId TicketAgreement
        with 
          cashId : ContractId Cash
        controller buyer
        do 
          cash <- fetch cashId
          cash.amount === price
          exercise cashId Transfer with
              newOwner = organizer
          create TicketAgreement with
              organizer; owner = buyer

template Cash 
  with 
    issuer : Party 
    owner : Party 
    amount : Decimal 
  where 
    signatory issuer 
    observer owner
    nonconsuming choice Transfer : ()
      with
        newOwner : Party 
      controller owner
      do 
        create this with owner = newOwner 
        archive self

template TicketAgreement 
  with 
    organizer : Party 
    owner : Party 
  where 
    signatory organizer, owner 

setup : Script ()
setup = script do 
  alice <- allocatePartyByHint (PartyIdHint "Alice")
  ticketWizard <- allocatePartyByHint (PartyIdHint "TicketWizard")
  scroogeBank <- allocatePartyByHint (PartyIdHint "ScroogeBank")

  aliceId <- validateUserId "aliceuser"
  ticketWizardId <- validateUserId "ticketwizarduser"
  scroogeBankId <- validateUserId "scroogebankuser"

  createUser (User aliceId (Some alice)) [CanActAs alice]
  createUser (User ticketWizardId (Some ticketWizard)) [CanActAs ticketWizard]
  createUser (User scroogeBankId (Some scroogeBank)) [CanActAs scroogeBank, CanReadAs alice]

  cashCid1 <- submit scroogeBank $ createCmd (Cash scroogeBank alice 10.0)
  offerCid1 <- submit ticketWizard $ createCmd (TicketOffer ticketWizard alice 10.0)
  submit alice $ exerciseCmd offerCid1 (Accept cashCid1)

  cashCid2 <- submit scroogeBank $ createCmd (Cash scroogeBank alice 20.0)
  offerCid2 <- submit ticketWizard $ createCmd (TicketOffer ticketWizard alice 20.0)
  submit alice $ exerciseCmd offerCid2 (Accept cashCid2)

  return ()